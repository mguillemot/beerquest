<?xml version="1.0"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
           xmlns:ui="com.beerquest.ui.*"
           width="176"
           creationComplete="init()">
    <mx:Style>
        .score {
            fontFamily: Kro;
            fontSize: 32;
            color: white;
            textAlign: right;
        }

        .small-score {
            fontFamily: Kro;
            fontSize: 16;
            color: white;
            textAlign: right;
        }

        .multiplier {
            fontFamily: "Arial";
            fontSize: 14;
            color: #a23e03;
            textAlign: center;
        }

        .action {
            fontFamily: Kro;
            fontSize: 14;
            color: white;
            textAlign: center;
        }
    </mx:Style>
    <mx:Script><![CDATA[
        import com.beerquest.Capacity;
        import com.beerquest.PlayerData;
        import com.beerquest.events.BeerCollectedEvent;
        import com.beerquest.events.PissEvent;
        import com.beerquest.events.VomitEvent;

        [Bindable]
        public var player:PlayerData;

        [Bindable]
        public var clickable:Boolean = true;

        private function init():void {
            //alcoholBar.setProgress(33, 100);
            //pissBar.setProgress(70, 100);
            addEventListener(BeerCollectedEvent.BEER_COLLECTED, onBeerCollected);
        }

        private function onBeerCollected(e:BeerCollectedEvent):void {
            player.fullBeers++;
        }

        private function onMouseOverVomit(e:Event):void {
            vomitText.setStyle("color", "#ffbaba");
        }

        private function onMouseOutVomit(e:Event):void {
            vomitText.setStyle("color", "white");
        }

        private function onClickVomit(e:Event):void {
            dispatchEvent(new VomitEvent(player));
        }

        private function onMouseOverPiss(e:Event):void {
            pissText.setStyle("color", "#ffbaba");
        }

        private function onMouseOutPiss(e:Event):void {
            pissText.setStyle("color", "white");
        }

        private function onClickPiss(e:Event):void {
            dispatchEvent(new PissEvent(player));
        }

        private function and(a:Boolean, b:Boolean):Boolean {
            return (a && b);
        }
        ]]></mx:Script>
    <mx:NumberFormatter id="scoreFormatter" useThousandsSeparator="true" decimalSeparatorTo=","
                        thousandsSeparatorTo="."/>
    <mx:Label text="Score: {player.score} caps" x="10" y="80"/>

    <mx:Canvas height="34" width="176">
        <ui:ProgressBar y="9" progress="{player.vomit}" fullColor="0x4b9f00" emptyColor="0xbdff8c"/>
        <mx:Image x="15" source="@Embed(source='../../../action-button.png')" mouseOver="onMouseOverVomit(event)"
                  mouseOut="onMouseOutVomit(event)" click="onClickVomit(event)"
                  visible="{and(clickable, player.vomit >= 80)}"/>
        <mx:Label id="vomitText" x="13" y="3" width="65" text="Gerber" styleName="action"
                  mouseOver="onMouseOverVomit(event)" mouseOut="onMouseOutVomit(event)" click="onClickVomit(event)"
                  visible="{and(clickable, player.vomit >= 80)}">
            <mx:filters>
                <mx:DropShadowFilter distance="2" angle="45" blurX="0" blurY="0" alpha="1" color="0x111111"/>
            </mx:filters>
        </mx:Label>
    </mx:Canvas>

    <mx:Canvas y="33" height="34" width="176">
        <ui:ProgressBar y="9" progress="{player.piss}" fullColor="0x9f9600" emptyColor="0xf2ba00"/>
        <mx:Image x="15" source="@Embed(source='../../../action-button.png')" mouseOver="onMouseOverPiss(event)"
                  mouseOut="onMouseOutPiss(event)" click="onClickPiss(event)"
                  visible="{and(clickable, player.piss >= 80)}"/>
        <mx:Label id="pissText" x="13" y="3" width="65" text="Pisser" styleName="action"
                  mouseOver="onMouseOverPiss(event)"
                  mouseOut="onMouseOutPiss(event)" click="onClickPiss(event)"
                  visible="{and(clickable, player.piss >= 80)}">
            <mx:filters>
                <mx:DropShadowFilter distance="2" angle="45" blurX="0" blurY="0" alpha="1" color="0x111111"/>
            </mx:filters>
        </mx:Label>
    </mx:Canvas>

    <mx:Canvas x="0" y="67">
        <mx:Image source="@Embed(source='../../../player-score.png')"/>

        <mx:Canvas x="5" y="2" width="120">
            <mx:Label id="caps" text="{scoreFormatter.format(player.score)}" width="100%" styleName="small-score">
                <mx:filters>
                    <mx:DropShadowFilter distance="1" angle="45" blurX="0" blurY="0" alpha="1" color="0x111111"/>
                </mx:filters>
            </mx:Label>
        </mx:Canvas>
        <mx:Image x="130" y="7" source="@Embed(source='../../../caps.png')"/>

        <mx:Canvas x="148" y="5" width="25">
            <mx:Label id="multiplier" text="X{player.multiplier}" width="100%" styleName="multiplier"
                      visible="{player.multiplier != 1}">
                <mx:filters>
                    <mx:GlowFilter blurX="2" blurY="2" alpha="1" color="0xffffff" quality="2"/>
                </mx:filters>
            </mx:Label>
        </mx:Canvas>

        <mx:Canvas x="5" y="25" width="120">
            <mx:Label id="collectedBeers" text="{player.fullBeers}" width="100%" styleName="score">
                <mx:filters>
                    <mx:DropShadowFilter distance="2" angle="45" blurX="0" blurY="0" alpha="1" color="0x111111"/>
                </mx:filters>
            </mx:Label>
        </mx:Canvas>
        <mx:Image x="130" y="32" source="@Embed(source='../../../collected-beer.png')"/>

        <ui:TokenCollectionView x="3" y="82" player="{player}"/>
    </mx:Canvas>
    <mx:VBox x="0" y="190" width="100%" horizontalAlign="center" verticalGap="0">
        <ui:CapacityView capacity="{player.capacities.getItemAt(0) as Capacity}"/>
        <ui:CapacityView capacity="{player.capacities.getItemAt(1) as Capacity}"/>
        <ui:CapacityView capacity="{player.capacities.getItemAt(2) as Capacity}"/>
    </mx:VBox>
</mx:Canvas>
